@model IEnumerable<VcBlazor.Data.Entities.PollingStationHierarchy>

@{
    ViewData["Title"] = "Bureaux de Vote Hiérarchie - ETOUDI 2025";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <!-- En-tête -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="h3 mb-1">
                        <i class="fas fa-sitemap text-primary"></i>
                        Hiérarchie des Bureaux de Vote
                    </h2>
                    <p class="text-muted mb-0">Gestion hiérarchique des bureaux de vote par centre</p>
                </div>
                <div>
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Nouveau Bureau
                    </a>
                </div>
            </div>

            <!-- Messages de feedback -->
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>
                    @TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <!-- Statistiques -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card bg-primary text-white">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h4 class="mb-0">@Model.Count()</h4>
                                    <p class="mb-0">Total Bureaux</p>
                                </div>
                                <i class="fas fa-sitemap fa-2x opacity-75"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-success text-white">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h4 class="mb-0">@Model.Count(p => p.Status == "active")</h4>
                                    <p class="mb-0">Bureaux Actifs</p>
                                </div>
                                <i class="fas fa-check-circle fa-2x opacity-75"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-info text-white">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h4 class="mb-0">@Model.Sum(p => p.RegisteredVoters).ToString("N0")</h4>
                                    <p class="mb-0">Électeurs Inscrits</p>
                                </div>
                                <i class="fas fa-users fa-2x opacity-75"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-warning text-white">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h4 class="mb-0">@(Model.Any() && Model.Sum(p => p.RegisteredVoters) > 0 ? (Model.Sum(p => p.VotesSubmitted) * 100.0 / Model.Sum(p => p.RegisteredVoters)).ToString("F1") + "%" : "0%")</h4>
                                    <p class="mb-0">Taux Participation</p>
                                </div>
                                <i class="fas fa-chart-line fa-2x opacity-75"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Filtres et recherche -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-body">
                    <div class="row align-items-end">
                        <div class="col-md-4">
                            <label class="form-label">Rechercher un bureau</label>
                            <input type="text" id="searchInput" class="form-control" placeholder="Nom du bureau...">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Statut</label>
                            <select id="statusFilter" class="form-select">
                                <option value="">Tous les statuts</option>
                                <option value="active">Actif</option>
                                <option value="pending">En attente</option>
                                <option value="closed">Fermé</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Centre de vote</label>
                            <select id="centerFilter" class="form-select">
                                <option value="">Tous les centres</option>
                                @foreach (var center in Model.Select(p => p.VotingCenter).DistinctBy(v => v?.Id).Where(v => v != null))
                                {
                                    <option value="@center!.Name">@center.Name</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-outline-secondary w-100" onclick="clearFilters()">
                                <i class="fas fa-times"></i> Effacer
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Table des bureaux de vote -->
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover align-middle" id="stationsTable">
                            <thead class="table-light">
                                <tr>
                                    <th><i class="fas fa-sitemap me-2"></i>Bureau</th>
                                    <th><i class="fas fa-warehouse me-2"></i>Centre de Vote</th>
                                    <th><i class="fas fa-hashtag me-2"></i>N° Bureau</th>
                                    <th><i class="fas fa-users me-2"></i>Électeurs</th>
                                    <th><i class="fas fa-vote-yea me-2"></i>Votes</th>
                                    <th><i class="fas fa-percent me-2"></i>Participation</th>
                                    <th><i class="fas fa-info-circle me-2"></i>Statut</th>
                                    <th class="text-end"><i class="fas fa-cogs me-2"></i>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Any())
                                {
                                    @foreach (var station in Model)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="avatar-sm rounded-circle bg-primary-subtle d-flex align-items-center justify-content-center me-3">
                                                        <i class="fas fa-sitemap text-primary"></i>
                                                    </div>
                                                    <div>
                                                        <h6 class="mb-0">@station.Name</h6>
                                                        <small class="text-muted">ID: @station.Id</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                @if (station.VotingCenter != null)
                                                {
                                                    <span class="badge bg-info-subtle text-info">@station.VotingCenter.Name</span>
                                                    @if (station.VotingCenter.Commune != null)
                                                    {
                                                        <br><small class="text-muted">@station.VotingCenter.Commune.Name</small>
                                                    }
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Non défini</span>
                                                }
                                            </td>
                                            <td>
                                                <span class="badge bg-secondary fs-6">@station.StationNumber</span>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <i class="fas fa-users text-primary me-2"></i>
                                                    <span class="fw-semibold">@station.RegisteredVoters.ToString("N0")</span>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <i class="fas fa-vote-yea text-success me-2"></i>
                                                    <span class="fw-semibold">@station.VotesSubmitted.ToString("N0")</span>
                                                </div>
                                            </td>
                                            <td>
                                                @{
                                                    var turnoutColor = station.TurnoutRate switch
                                                    {
                                                        >= 70 => "success",
                                                        >= 50 => "warning",
                                                        _ => "danger"
                                                    };
                                                }
                                                <span class="badge bg-@turnoutColor-subtle text-@turnoutColor fs-6">
                                                    @station.TurnoutRate.ToString("F1")%
                                                </span>
                                            </td>
                                            <td>
                                                @switch (station.Status)
                                                {
                                                    case "active":
                                                        <span class="badge bg-success-subtle text-success">
                                                            <i class="fas fa-check-circle me-1"></i>Actif
                                                        </span>
                                                        break;
                                                    case "pending":
                                                        <span class="badge bg-warning-subtle text-warning">
                                                            <i class="fas fa-clock me-1"></i>En attente
                                                        </span>
                                                        break;
                                                    case "closed":
                                                        <span class="badge bg-danger-subtle text-danger">
                                                            <i class="fas fa-times-circle me-1"></i>Fermé
                                                        </span>
                                                        break;
                                                    default:
                                                        <span class="badge bg-secondary-subtle text-secondary">
                                                            <i class="fas fa-question-circle me-1"></i>@station.Status
                                                        </span>
                                                        break;
                                                }
                                            </td>
                                            <td class="text-end">
                                                <div class="btn-group" role="group">
                                                    <a asp-action="Details" asp-route-id="@station.Id" 
                                                       class="btn btn-sm btn-outline-primary" title="Voir détails">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a asp-action="Edit" asp-route-id="@station.Id" 
                                                       class="btn btn-sm btn-outline-secondary" title="Modifier">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <a asp-action="Delete" asp-route-id="@station.Id" 
                                                       class="btn btn-sm btn-outline-danger" title="Supprimer"
                                                       onclick="return confirm('Êtes-vous sûr de vouloir supprimer ce bureau de vote ?')">
                                                        <i class="fas fa-trash"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="8" class="text-center py-5">
                                            <div class="d-flex flex-column align-items-center text-muted">
                                                <i class="fas fa-sitemap fa-3x mb-3 opacity-50"></i>
                                                <h5>Aucun bureau de vote trouvé</h5>
                                                <p class="mb-3">Commencez par ajouter votre premier bureau de vote.</p>
                                                <a asp-action="Create" class="btn btn-primary">
                                                    <i class="fas fa-plus me-2"></i>Ajouter un Bureau
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Fonctionnalités de filtrage et recherche
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchInput');
            const statusFilter = document.getElementById('statusFilter');
            const centerFilter = document.getElementById('centerFilter');
            const table = document.getElementById('stationsTable');
            const tbody = table.querySelector('tbody');
            const rows = Array.from(tbody.querySelectorAll('tr'));

            function filterTable() {
                const searchTerm = searchInput.value.toLowerCase();
                const selectedStatus = statusFilter.value.toLowerCase();
                const selectedCenter = centerFilter.value.toLowerCase();

                rows.forEach(row => {
                    if (row.cells.length < 8) return; // Skip empty state row

                    const name = row.cells[0].textContent.toLowerCase();
                    const center = row.cells[1].textContent.toLowerCase();
                    const statusCell = row.cells[6];
                    const status = statusCell.querySelector('.badge').textContent.toLowerCase();

                    const matchesSearch = name.includes(searchTerm);
                    const matchesStatus = !selectedStatus || status.includes(selectedStatus);
                    const matchesCenter = !selectedCenter || center.includes(selectedCenter);

                    row.style.display = (matchesSearch && matchesStatus && matchesCenter) ? '' : 'none';
                });
            }

            searchInput.addEventListener('input', filterTable);
            statusFilter.addEventListener('change', filterTable);
            centerFilter.addEventListener('change', filterTable);

            window.clearFilters = function() {
                searchInput.value = '';
                statusFilter.value = '';
                centerFilter.value = '';
                filterTable();
            };
        });
    </script>
}

<style>
    .avatar-sm {
        width: 40px;
        height: 40px;
    }
    
    .table th {
        font-weight: 600;
        color: #495057;
        border-bottom: 2px solid #dee2e6;
    }
    
    .card {
        transition: all 0.3s ease;
    }
    
    .table-hover tbody tr:hover {
        background-color: rgba(0, 123, 255, 0.05);
    }
    
    .btn-group .btn {
        border-radius: 0.375rem;
    }
    
    .btn-group .btn + .btn {
        margin-left: 2px;
    }

    .badge {
        font-size: 0.875em;
    }
</style>