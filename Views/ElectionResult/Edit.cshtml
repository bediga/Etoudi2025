@model VcBlazor.Data.Entities.ElectionResult

@{
    ViewData["Title"] = "Modifier Résultat - ETOUDI 2025";
}

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <!-- En-tête -->
            <div class="d-flex align-items-center mb-4">
                <a asp-action="Index" class="btn btn-outline-secondary me-3">
                    <i class="fas fa-arrow-left"></i>
                </a>
                <div class="flex-grow-1">
                    <h2 class="h3 mb-1">
                        <i class="fas fa-edit text-warning"></i>
                        Modifier le Résultat Électoral
                    </h2>
                    <p class="text-muted mb-0">
                        @if (Model?.Candidate != null)
                        {
                            @($"Résultat de {Model.Candidate.FirstName} {Model.Candidate.LastName}")
                        }
                        else
                        {
                            @("Modification du résultat électoral")
                        }
                    </p>
                </div>
                <a asp-action="Details" asp-route-id="@Model?.Id" class="btn btn-info">
                    <i class="fas fa-eye me-2"></i>Voir Détails
                </a>
            </div>

            <!-- Alerte de modification -->
            <div class="alert alert-warning border-0 shadow-sm mb-4" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i>
                <strong>Modification de résultat :</strong> Soyez prudent lors de la modification des données électorales. 
                Vérifiez la cohérence avec les autres résultats.
            </div>

            <form asp-action="Edit" method="post" id="editForm" class="needs-validation" novalidate>
                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="CreatedAt" />

                <div class="row">
                    <!-- Colonne principale -->
                    <div class="col-lg-8">
                        <!-- Informations actuelles -->
                        <div class="card border-0 shadow-sm mb-4">
                            <div class="card-header bg-info text-white">
                                <h5 class="mb-0">
                                    <i class="fas fa-chart-bar me-2"></i>Résultat Actuel
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="row text-center mb-3">
                                    <div class="col-md-4">
                                        <div class="bg-light rounded p-3">
                                            <h4 class="text-primary mb-1">@(Model?.Votes.ToString("N0") ?? "0")</h4>
                                            <small class="text-muted">Votes Actuels</small>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="bg-light rounded p-3">
                                            <h4 class="text-info mb-1">@(Model?.TotalVotes.ToString("N0") ?? "0")</h4>
                                            <small class="text-muted">Total Actuel</small>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="bg-light rounded p-3">
                                            <h4 class="text-success mb-1">@((Model?.Percentage ?? 0).ToString("F2"))%</h4>
                                            <small class="text-muted">Score Actuel</small>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Candidat actuel (non modifiable) -->
                                @if (Model?.Candidate != null)
                                {
                                    <div class="alert alert-light border">
                                        <div class="d-flex align-items-center">
                                            <i class="fas fa-user-tie fa-2x text-primary me-3"></i>
                                            <div>
                                                <h6 class="mb-1">@Model.Candidate.FirstName @Model.Candidate.LastName</h6>
                                                <small class="text-muted">
                                                    @(Model.Candidate.Party ?? "Indépendant") - 
                                                    Candidat non modifiable
                                                </small>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>

                        <!-- Nouvelles valeurs -->
                        <div class="card border-0 shadow-sm mb-4">
                            <div class="card-header bg-primary text-white">
                                <h5 class="mb-0">
                                    <i class="fas fa-edit me-2"></i>Nouvelles Valeurs
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <!-- Candidat (lecture seule) -->
                                    <input type="hidden" asp-for="CandidateId" />
                                    
                                    <div class="col-md-6 mb-3">
                                        <label asp-for="PollingStationId" class="form-label">
                                            <i class="fas fa-map-marker-alt me-2"></i>Bureau de Vote
                                        </label>
                                        <select asp-for="PollingStationId" class="form-select form-select-lg" 
                                                asp-items="ViewBag.PollingStations">
                                            <option value="">-- Global (tous bureaux) --</option>
                                        </select>
                                        <span asp-validation-for="PollingStationId" class="text-danger"></span>
                                        <div class="form-text">Laisser vide pour un résultat global</div>
                                    </div>

                                    <div class="col-md-6 mb-3">
                                        <label asp-for="Verified" class="form-label">
                                            <i class="fas fa-shield-alt me-2"></i>Statut de Vérification
                                        </label>
                                        <div class="form-check form-switch mt-2">
                                            <input asp-for="Verified" class="form-check-input form-check-input-lg" 
                                                   type="checkbox" role="switch" id="verifiedSwitch">
                                            <label class="form-check-label" for="verifiedSwitch">
                                                <span id="verifiedLabel">Résultat vérifié</span>
                                            </label>
                                        </div>
                                        <div class="form-text">Marquer comme vérifié si contrôlé</div>
                                    </div>

                                    <div class="col-md-4 mb-3">
                                        <label asp-for="Votes" class="form-label required">
                                            <i class="fas fa-poll me-2"></i>Nombre de Votes
                                        </label>
                                        <input asp-for="Votes" type="number" 
                                               class="form-control form-control-lg" 
                                               min="0" max="1000000" 
                                               placeholder="0" required 
                                               oninput="updatePercentage()" />
                                        <span asp-validation-for="Votes" class="text-danger"></span>
                                        <div class="form-text">Votes obtenus par le candidat</div>
                                    </div>

                                    <div class="col-md-4 mb-3">
                                        <label asp-for="TotalVotes" class="form-label required">
                                            <i class="fas fa-chart-pie me-2"></i>Total des Votes
                                        </label>
                                        <input asp-for="TotalVotes" type="number" 
                                               class="form-control form-control-lg" 
                                               min="0" placeholder="0" required
                                               oninput="updatePercentage()" />
                                        <span asp-validation-for="TotalVotes" class="text-danger"></span>
                                        <div class="form-text">Total de tous les votes exprimés</div>
                                    </div>

                                    <div class="col-md-4 mb-3">
                                        <label class="form-label">
                                            <i class="fas fa-percentage me-2"></i>Nouveau Pourcentage
                                        </label>
                                        <div class="input-group">
                                            <input type="text" id="percentageDisplay" 
                                                   class="form-control form-control-lg text-center fw-bold" 
                                                   value="@((Model?.Percentage ?? 0).ToString("F2"))%" readonly />
                                            <span class="input-group-text">
                                                <i id="percentageIcon" class="fas fa-chart-line"></i>
                                            </span>
                                        </div>
                                        <div class="form-text">Calculé automatiquement</div>
                                        <input asp-for="Percentage" type="hidden" id="percentageHidden" />
                                    </div>

                                    <div class="col-md-6 mb-3">
                                        <label asp-for="SubmittedAt" class="form-label">
                                            <i class="fas fa-calendar me-2"></i>Date de Soumission
                                        </label>
                                        <input asp-for="SubmittedAt" type="datetime-local" 
                                               class="form-control form-control-lg" />
                                        <span asp-validation-for="SubmittedAt" class="text-danger"></span>
                                        <div class="form-text">Date et heure de soumission</div>
                                    </div>

                                    <div class="col-md-6 mb-3">
                                        <label class="form-label text-muted">
                                            <i class="fas fa-clock me-2"></i>Dernière Modification
                                        </label>
                                        <input type="text" class="form-control form-control-lg" 
                                               value="@DateTime.Now.ToString("dd/MM/yyyy HH:mm")" readonly />
                                        <div class="form-text">Mise à jour automatique</div>
                                    </div>

                                    <div class="col-md-12 mb-3">
                                        <label asp-for="VerificationNotes" class="form-label">
                                            <i class="fas fa-comment me-2"></i>Notes de Vérification
                                        </label>
                                        <textarea asp-for="VerificationNotes" class="form-control" 
                                                  rows="4" placeholder="Notes, observations, modifications apportées..."></textarea>
                                        <span asp-validation-for="VerificationNotes" class="text-danger"></span>
                                        <div class="form-text">Documentez les modifications apportées</div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Comparaison avant/après -->
                        <div class="card border-0 shadow-sm mb-4" id="comparisonCard" style="display: none;">
                            <div class="card-header bg-success text-white">
                                <h5 class="mb-0">
                                    <i class="fas fa-balance-scale me-2"></i>Comparaison Avant / Après
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <h6 class="text-muted">Valeurs Actuelles</h6>
                                        <div class="bg-light rounded p-3">
                                            <div class="d-flex justify-content-between">
                                                <span>Votes:</span>
                                                <strong>@(Model?.Votes.ToString("N0") ?? "0")</strong>
                                            </div>
                                            <div class="d-flex justify-content-between">
                                                <span>Total:</span>
                                                <strong>@(Model?.TotalVotes.ToString("N0") ?? "0")</strong>
                                            </div>
                                            <div class="d-flex justify-content-between">
                                                <span>Score:</span>
                                                <strong>@((Model?.Percentage ?? 0).ToString("F2"))%</strong>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <h6 class="text-muted">Nouvelles Valeurs</h6>
                                        <div class="bg-primary bg-opacity-10 rounded p-3">
                                            <div class="d-flex justify-content-between">
                                                <span>Votes:</span>
                                                <strong id="newVotes">-</strong>
                                            </div>
                                            <div class="d-flex justify-content-between">
                                                <span>Total:</span>
                                                <strong id="newTotal">-</strong>
                                            </div>
                                            <div class="d-flex justify-content-between">
                                                <span>Score:</span>
                                                <strong id="newPercentage">-</strong>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Différence -->
                                <div class="mt-3 p-3 border rounded" id="differenceSection">
                                    <h6 class="text-muted mb-2">Évolution</h6>
                                    <div id="evolutionDisplay"></div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Panneau latéral -->
                    <div class="col-lg-4">
                        <!-- Actions de modification -->
                        <div class="card border-0 shadow-sm mb-4 sticky-top">
                            <div class="card-header bg-warning text-dark">
                                <h5 class="mb-0">
                                    <i class="fas fa-save me-2"></i>Actions
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="d-grid gap-2">
                                    <button type="submit" class="btn btn-warning btn-lg">
                                        <i class="fas fa-save me-2"></i>Enregistrer les Modifications
                                    </button>
                                    <a asp-action="Details" asp-route-id="@Model?.Id" class="btn btn-info">
                                        <i class="fas fa-eye me-2"></i>Voir les Détails
                                    </a>
                                    <a asp-action="Index" class="btn btn-outline-secondary">
                                        <i class="fas fa-times me-2"></i>Annuler
                                    </a>
                                    <hr>
                                    <button type="button" class="btn btn-outline-primary" onclick="resetToOriginal()">
                                        <i class="fas fa-undo me-2"></i>Restaurer Original
                                    </button>
                                </div>

                                <!-- Validation en temps réel -->
                                <div class="mt-3 p-3 bg-light rounded">
                                    <h6 class="text-muted mb-2">
                                        <i class="fas fa-shield-alt me-2"></i>Validation
                                    </h6>
                                    <div id="validationStatus">
                                        <small class="text-muted">Vérifiez les modifications...</small>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Historique des modifications -->
                        <div class="card border-0 shadow-sm">
                            <div class="card-header bg-secondary text-white">
                                <h5 class="mb-0">
                                    <i class="fas fa-history me-2"></i>Informations
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="small">
                                    <div class="mb-3">
                                        <strong><i class="fas fa-plus text-success me-2"></i>Créé:</strong>
                                        <br>@(Model?.CreatedAt.ToString("dd/MM/yyyy à HH:mm") ?? "N/A")
                                    </div>
                                    
                                    <div class="mb-3">
                                        <strong><i class="fas fa-edit text-warning me-2"></i>Modifié:</strong>
                                        <br>@Model.UpdatedAt.ToString("dd/MM/yyyy à HH:mm")
                                    </div>

                                    <div class="mb-3">
                                        <strong><i class="fas fa-calendar text-info me-2"></i>Soumis:</strong>
                                        <br>@Model.SubmittedAt.ToString("dd/MM/yyyy à HH:mm")
                                    </div>

                                    <div class="alert alert-info alert-sm">
                                        <i class="fas fa-info-circle me-2"></i>
                                        <strong>Attention :</strong> Les modifications seront tracées et horodatées.
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Valeurs originales pour comparaison
        const originalVotes = @(Model?.Votes ?? 0);
        const originalTotal = @(Model?.TotalVotes ?? 0);
        const originalPercentage = @(Model?.Percentage ?? 0);

        // Mise à jour automatique du pourcentage
        function updatePercentage() {
            const votes = parseInt(document.querySelector('[name="Votes"]').value) || 0;
            const totalVotes = parseInt(document.querySelector('[name="TotalVotes"]').value) || 0;
            
            let percentage = 0;
            if (totalVotes > 0) {
                percentage = Math.min((votes / totalVotes) * 100, 100);
            }
            
            // Mise à jour de l'affichage
            const displayElement = document.getElementById('percentageDisplay');
            const hiddenElement = document.getElementById('percentageHidden');
            const percentageIcon = document.getElementById('percentageIcon');
            
            displayElement.value = percentage.toFixed(2) + '%';
            hiddenElement.value = percentage.toFixed(4);
            
            // Couleurs selon le score
            if (percentage >= 50) {
                displayElement.className = 'form-control form-control-lg text-center fw-bold text-success';
                percentageIcon.className = 'fas fa-trophy text-success';
            } else if (percentage >= 25) {
                displayElement.className = 'form-control form-control-lg text-center fw-bold text-primary';
                percentageIcon.className = 'fas fa-chart-line text-primary';
            } else if (percentage >= 10) {
                displayElement.className = 'form-control form-control-lg text-center fw-bold text-warning';
                percentageIcon.className = 'fas fa-minus text-warning';
            } else {
                displayElement.className = 'form-control form-control-lg text-center fw-bold text-danger';
                percentageIcon.className = 'fas fa-arrow-down text-danger';
            }
            
            updateComparison(votes, totalVotes, percentage);
            updateValidationStatus();
        }

        // Mise à jour de la comparaison
        function updateComparison(votes, totalVotes, percentage) {
            const comparisonCard = document.getElementById('comparisonCard');
            
            // Afficher si changement détecté
            if (votes !== originalVotes || totalVotes !== originalTotal) {
                comparisonCard.style.display = 'block';
                
                // Mise à jour des nouvelles valeurs
                document.getElementById('newVotes').textContent = votes.toLocaleString();
                document.getElementById('newTotal').textContent = totalVotes.toLocaleString();
                document.getElementById('newPercentage').textContent = percentage.toFixed(2) + '%';
                
                // Calcul des différences
                const votesDiff = votes - originalVotes;
                const totalDiff = totalVotes - originalTotal;
                const percentageDiff = percentage - originalPercentage;
                
                // Affichage des évolutions
                let evolutionHtml = '';
                
                if (votesDiff !== 0) {
                    const diffClass = votesDiff > 0 ? 'text-success' : 'text-danger';
                    const diffIcon = votesDiff > 0 ? 'fas fa-arrow-up' : 'fas fa-arrow-down';
                    evolutionHtml += `<div class="${diffClass}">
                        <i class="${diffIcon} me-1"></i>
                        Votes: ${votesDiff > 0 ? '+' : ''}${votesDiff.toLocaleString()}
                    </div>`;
                }
                
                if (totalDiff !== 0) {
                    const diffClass = totalDiff > 0 ? 'text-success' : 'text-danger';
                    const diffIcon = totalDiff > 0 ? 'fas fa-arrow-up' : 'fas fa-arrow-down';
                    evolutionHtml += `<div class="${diffClass}">
                        <i class="${diffIcon} me-1"></i>
                        Total: ${totalDiff > 0 ? '+' : ''}${totalDiff.toLocaleString()}
                    </div>`;
                }
                
                if (Math.abs(percentageDiff) > 0.01) {
                    const diffClass = percentageDiff > 0 ? 'text-success' : 'text-danger';
                    const diffIcon = percentageDiff > 0 ? 'fas fa-arrow-up' : 'fas fa-arrow-down';
                    evolutionHtml += `<div class="${diffClass}">
                        <i class="${diffIcon} me-1"></i>
                        Score: ${percentageDiff > 0 ? '+' : ''}${percentageDiff.toFixed(2)}%
                    </div>`;
                }
                
                document.getElementById('evolutionDisplay').innerHTML = evolutionHtml || '<span class="text-muted">Aucun changement</span>';
            } else {
                comparisonCard.style.display = 'none';
            }
        }

        // Restaurer les valeurs originales
        function resetToOriginal() {
            if (confirm('Restaurer les valeurs originales? Toutes les modifications seront perdues.')) {
                document.querySelector('[name="Votes"]').value = originalVotes;
                document.querySelector('[name="TotalVotes"]').value = originalTotal;
                updatePercentage();
            }
        }

        // Mise à jour du label de vérification
        function updateVerificationLabel() {
            const verified = document.getElementById('verifiedSwitch').checked;
            const label = document.getElementById('verifiedLabel');
            
            if (verified) {
                label.textContent = 'Résultat vérifié et validé';
                label.className = 'form-check-label text-success';
            } else {
                label.textContent = 'Résultat non vérifié';
                label.className = 'form-check-label text-muted';
            }
        }

        // Validation en temps réel
        function updateValidationStatus() {
            const votes = parseInt(document.querySelector('[name="Votes"]').value) || 0;
            const totalVotes = parseInt(document.querySelector('[name="TotalVotes"]').value) || 0;
            
            const validationStatus = document.getElementById('validationStatus');
            let isValid = true;
            let messages = [];
            
            // Vérifications
            if (votes < 0) {
                isValid = false;
                messages.push('⚠️ Nombre de votes invalide');
            }
            
            if (totalVotes < votes) {
                isValid = false;
                messages.push('⚠️ Total < Votes candidat');
            }
            
            if (totalVotes <= 0 && votes > 0) {
                isValid = false;
                messages.push('⚠️ Total des votes requis');
            }
            
            // Vérification des changements
            const hasChanges = votes !== originalVotes || totalVotes !== originalTotal;
            if (!hasChanges && messages.length === 0) {
                messages.push('ℹ️ Aucune modification');
            }
            
            // Affichage du statut
            if (isValid && messages.length <= 1) {
                if (hasChanges) {
                    validationStatus.innerHTML = '<small class="text-success"><i class="fas fa-check-circle me-1"></i>Modifications valides</small>';
                } else {
                    validationStatus.innerHTML = '<small class="text-muted"><i class="fas fa-info-circle me-1"></i>Aucune modification</small>';
                }
                document.querySelector('button[type="submit"]').disabled = false;
            } else {
                const messageHtml = messages.map(msg => `<small class="text-warning d-block">${msg}</small>`).join('');
                validationStatus.innerHTML = messageHtml;
                document.querySelector('button[type="submit"]').disabled = messages.length > 1;
            }
        }

        // Initialisation
        document.addEventListener('DOMContentLoaded', function() {
            // Initialiser l'affichage du pourcentage
            updatePercentage();
            
            // Écoute des changements
            document.querySelectorAll('input, select').forEach(element => {
                element.addEventListener('input', updateValidationStatus);
                element.addEventListener('change', updateValidationStatus);
            });
            
            // Écoute spéciale pour le switch de vérification
            document.getElementById('verifiedSwitch').addEventListener('change', updateVerificationLabel);
            
            // Validation initiale
            updateValidationStatus();
            updateVerificationLabel();
            
            // Validation Bootstrap
            const forms = document.querySelectorAll('.needs-validation');
            Array.prototype.slice.call(forms).forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        });
    </script>
}

<style>
    .required::after {
        content: " *";
        color: #dc3545;
    }
    
    .form-control:focus,
    .form-select:focus {
        border-color: #0d6efd;
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.15);
    }
    
    .card-header {
        border-bottom: none;
        font-weight: 600;
    }
    
    .sticky-top {
        top: 20px;
    }
    
    .btn-lg {
        padding: 0.75rem 1.5rem;
        font-size: 1.1rem;
    }
    
    .alert-sm {
        padding: 0.5rem;
        font-size: 0.875rem;
    }
    
    .form-check-input-lg {
        width: 2rem;
        height: 1rem;
    }
    
    .bg-opacity-10 {
        --bs-bg-opacity: 0.1;
    }
    
    @@media (max-width: 768px) {
        .sticky-top {
            position: relative !important;
            top: auto !important;
        }
    }
</style>